#!####bin/bash
### strongbash008 Обязательно использовать #!/bin/bash даже в include'

### strongbash002 Не установлен set -eu
set +eu

### strongbash034_6 нельзя устанавливать set -o pipefail на весь файл"
set -uEopipefail

### strongbash006 1
echo $0 ST#A#RT

### strongbash019 
### проверять что есть описание программы а не только пример использования можно проверять что есть минимум два шарпа

sys::usa  ge "$@"
### --help I n f o: test-crab_syntax.black
### --help U s a g e: ccpp src dst
### --help E x a m p l e: ccoo myfile.txt http://example.com

### strongbash001 Не выполнен crab_indent
{
echo indent fail
}


### strongbash003 Нельзя использовать || true в условных выражениях
[ 1 = 2 ] && echo yes || true

### strongbash004 Нельзя использовать else true в условных выражениях
if false; then
	echo yes
else
	true
fi

### strongbash005 $count_func!=$count_end_return В конце каждой функции должен быть
###  return 0 или return $ret'
FAIL005(){
	[ 1 = 2 ] && return 1
	echo yes
}

### strongbash009 Нельзя использовать let тк дает ошибку при переходе через 0. Используйте $(())
let y=y+1

### strongbash010 Не рекомендуется использовать переменные для временных файлов,
### лучше /tmp/binname_tmpcat.$$
tmp1=/tmp/test-crab_syntax_check.black.$$
rm -f $tmp1
### strongbash011 Нельзя использовать временные файлы без $$, лучше rm -f /tmp/binname_tmpcat.$$
rm -f /tmp/test-crab_syntax_check.black.00

### strongbash011 слишком большая глубина >5
FAIL011(){
	{
		{
			{
				{
					{
						echo yes
					}
				}
			}
		}
	}
}

### strongbash012 pipe в "| \" требуется вынести на следующую строку.
echo yes | cat |\
	cat

### strongbash013 ставьте пробел после # или используйте #} для ошибок indent'
#коммент без пробела

### "strongbash014 Слишком большая функция больше 64 строк, выделите подфункции __f"
FAIL014(){
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
}

### strongbash015 Слишком большой линейный файл больше 64 строк, разбейте на функции
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1
echo 1

### strongbash017 длина строки больше $MAX_CHARS используйте перенос \
echo '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'

### strongbash018 поставьте пробел перед "text >"
echo test> /tmp/r.$$

### strongbash016 Уберите конечные пробелы и tab
echo yes	
echo yes 



### strongbash025 «do» и «then» НЕ делаем c новой строки
if true;
then
	echo true
fi

for 1 in 1;
do
	echo true
done

if true;
	then echo 1
	echo true
fi

for 1 in 1;
	do echo 1
	echo true
done

### strongbash026 Нельзя использовать голые скобки для assert и тп [ a = b ]
[ 1 = 2 ]

### strongbash023  1. Нужно всегда использовать read -r f1 f2 
### strongbash023  2. А для чтения целой строки while IFS='' read -r line; do
read f1 f2 < /tmp/myfile

while read line; do
	 echo "$f"
done < /tmp/myfile


### strongbash024 1. Запрещено rm -rf "/$dir" "./$dir" "$dir*" "$dir/*" "$dir/"
### strongbash024 2. rm -rf  всегда с -one-file-system
dir="/tmp/1231231313123123123123123"
### strongbash024_1
rm -rf -one-file-system "/$dir"
rm -rf -one-file-system "./$dir"

### strongbash024_2
rm -rf -one-file-system "$dir*"

### strongbash024_3
rm -rf -one-file-system "$dir/"
rm -rf -one-file-system "$dir/*"

### strongbash024_4
rm -rf "$dir"


### strongbash022_1 Утилиты должны удалять за собой временные файлы
tmpf="/tmp/rrr.$$"
#rm -f "$tmpf"

### strongbash022_2 Утилиты должны удалять за собой временные файлы
tmpf1=$(mktemp /tmp/rrr.XXXX )
#rm -f "$tmpf1"


### strongbash021_1 Запрещено удалять tmp в trap EXIT.
trap 'rm -f /tmp/eee' EXIT
trap 'rm -f /tmp/eee' 1 2 0 4

### strongbash021_2 Запрещено удалять tmp в trap EXIT.
TF=/tmp/rrr1
trap "rm -f $tf" EXIT

### strongbash021_3 Запрещено удалять tmp в trap EXIT.
trap "__exit1" EXIT
__exit1(){
	rm -f /tmp/eee
}

### strongbash021_4 Запрещено удалять tmp в trap EXIT.
trap "__exit2" EXIT
__exit2(){
	rm -f "$TF"
}

### strongbash021_5 Не рекомендуется использовать trap EXIT.
trap _exit EXIT

### strongbash020 Запрещены функции LOG в утилитах
log(){
	echo "$(date)"
	return 0
}

### strongbash027 нельзя использовать конструкции вида [ a = b ] || cmd1
### кроме утвержденного сахара
[ a = b ] || cmd1
cmd1 || cmd2
cmd1 || true
cmd1 || ttt && qqq

### strongbash028
### Нельзя использовать cmd1 || cmd2 || cmd3
### лучше проверять окружение и вызвать сразу нужное If centos if ubintu if dir
cmd1 || cmd2 || cmd3

### strongbash029 Если мы берем stdout от функции мы обязаны прописать
### в первой строке set -e тк он снимается
FAIL029(){
	echo TRUE
	return 0
}
ret=$( FAIL029 )

### strongbash030 нельзя вызывать функцию внутри if fname и fname&& и fname||
FAIL030(){
	echo TRUE
	return 0
}
FAIL030 && echo TRUE
FAIL030 || echo TRUE
if FAIL030; then
	echo TRUE
fi

### strongbash031 strongbash031 нельзя использовать -EOF, используйте обычный EOF
cat > /tmp/tmptest <<-EOF
	/*
	!/.gitignore
	!/etc
	EOF

### strongbash032
# Info: Проверяет скрипт на соглашение strongbash032

### strongbash033_1 глобальная переменная $var должна быть в верхнем регистре
globalvar1=123
FAIL033_1(){
	echo $globalvar1
}

### strongbash033_2 локальные переменные должны быть объявлены как local
### или для внешних, как declare в начале файла
FAIL033_2(){
	echo $mylocalvar
}

### strongbash033_3 имя локальной переменной должно быть в нижнем регистре
FAIL033_4(){
        local LOCALVAR2=0
        echo $LOCALVAR2
}

### strongbash034
### strongbash034_1 Будьте осторожны, использование grep -q grep -m 1 head tail
### вместе с set -o pipefail
### приведет к разрыву левой части pipe и остановке команды \"$cmd\"
### Если нормальное завершение этой команды необязательно,

set -o pipefail
ip1="$( ip | grep -m 1 src)"
set +o pipefail

### strongbash034_2 set -o pipefail не работает в if $cmd; then
set -o pipefail
if [ "$( ip | grep src )" != "" ]; then
	echo eee
fi

### strongbash034_3 Команда \"$cmd\" используется внутри pipe
ip1="$( ip | grep src)"

### strongbash034_4 необходимо включить set -o pipefail для ( code )| cmd"
(
	ls
) | sort

### strongbash034_5 все set -o pipefail нужно отключать после pipe set +o pipefail"
set -o pipefail
ls | grep a

### strongbash034_6 нельзя устанавливать set -o pipefail на весь файл"
### см начало файла

### strongbash035 нельзя использовать присвоение внутри if a\=\$(cmd)"
if cmd="$( ip | grep src)"; then
	echo $cmd
fi


### strongbash006  В конце каждого файла должен быть echo SUCCES-S
echo S#U#C#C#E#S#S

### strongbash007  В конце каждого файла должен быть exit 0
e#x#i#t 0

