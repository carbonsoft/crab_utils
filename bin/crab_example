#!/bin/bash

set -eu
__SILENT=TRUE
. /opt/crab/crab_utils/bin/crab_sys.sh

sys::usage "$@"
# --help Info:
# --help Утилита поиска примеров http://www.opencarbon.ru/example
# --help и можно свои добавлять списки "$HOME/.carbon_example_custom.urls"
# --help Usage:
# --help Example: crab_example sed  - примеры sed
# --help Example: crab_example bash string - примеры bash подпримеры работы со строками
# --help Example: crab_example update - обновить кеш всех списков



if [ "${1}" == "update" ]; then

	echo 0 > /tmp/.carbon_example/lastupdate
fi

update(){
	local page url example_pages
	wget --no-check-certificate https://dev7.cloudfox.com/example:example_index \
		-O /tmp/crab_example_index.$$ &>/dev/null
	example_pages=$( grep href /tmp/crab_example_index.$$ | grep example:example \
		| grep 'class="wikilink1"' | grep -v start \
		| grep -v example_index | sed -n 's/.*href="\/\([^"]*\).*/\1/p' )
	rm -f /tmp/crab_example_index.$$
	for page in $example_pages; do
		echo "https://dev7.cloudfox.com/?do=export_raw&id=${page}"
	done > "$HOME/.carbon_example.urls"
	touch "$HOME/.carbon_example_custom.urls"
	rm -f /tmp/.carbon_example/*
	for url in $(<$HOME/.carbon_example.urls) $(<$HOME/.carbon_example_custom.urls); do
		wget --no-check-certificate $url -O /tmp/crab_example_wget_out.$$ 2>/dev/null
		cat /tmp/crab_example_wget_out.$$ \
			| grep -v '^<code ' | grep -v '^</code>' \
			| sed 's/===.*//' > "/tmp/.carbon_example/${url//\//_}"
		rm -f /tmp/crab_example_wget_out.$$
	done
	date +%s > /tmp/.carbon_example/lastupdate
	return 0
}

mkdir -p /tmp/.carbon_example
touch /tmp/.carbon_example/lastupdate

if [ "${1}" == "update" ]; then
	update
fi

if [ $((`date +%s`-$(</tmp/.carbon_example/lastupdate) + 0 )) -gt $((3600*24)) ]; then
	update
fi

>/tmp/crab_example.$$

search(){
	local words1="$1"
	local words2="$2"
	local url line showline buff url
	for url in $(<$HOME/.carbon_example.urls) $(<$HOME/.carbon_example_custom.urls); do
		showline=FALSE
		buff=""
		while IFS='' read -r line; do
			shopt -s nocasematch
			if [[ "$line" == *"${words1}"* ]]; then
				if [ "${words2}" = "" ] || [[ "$line" == *"${words2}"* ]]; then
					showline=TRUE
					FOUND=""
				fi
			fi
			if [ "$showline" = "TRUE" ]; then
				if [ "$buff" != "" ]; then
					echo -n "$buff"
					buff=""
				fi
				if [ "${line:0:1}" = '# ' ]; then
					echo "${line%%###*}"
				else
					echo "${line}"
				fi
			else
				buff="${buff}${line}"$'\n'
			fi
			if [ "$line" = "" ]; then
				buff=""
				showline=FALSE
			fi
		done < /tmp/.carbon_example/${url//\//_}
	done
	return 0
}

FOUND=FALSE
search "###${1}" "${2:-}"
[ "$FOUND" = FALSE ] && search "${1}" "${2:-}"

exit 0
