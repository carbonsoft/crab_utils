#!/bin/bash

set -euE
echo "$0 $@ [$$] START" >&2

if [ "${1:---help}" = "--help" ]; then
	echo "Info: Утилита для бекапа БД mysql в git репозиторий"
	echo "делает разбивку файлов split и commit и push"
	echo "Usage:"
	echo "Example: backup: $0 --user=root --password=mypass --host=localhost DB_NAME BACKUP_DIR"
	echo 'Example: Restore
git log; git checkout;
for f in *.sql.*; do cat $f >>new.sql; done;

mv /var/lib/mysql /var/lib/mysql.before_repair.$(date +%s)
/etc/init.d/mysqld start || true # пустой каталок, пишет что ошибка на самом деле нет

if ! pidof mysqld; then
	echo "cant start mysqld"
	exit 1
fi

/usr/bin/mysqladmin -u root password "$ARG_PASSWORD"
/usr/bin/mysql -u root -p"$ARG_PASSWORD" </tmp/mysqldump.$$.sql
rm -f new.sql
# контрольная проверка
/etc/init.d/mysqld stop
/etc/init.d/mysqld start
'
	exit 0
fi

USER="${1/--user=/}"
PASSWORD="${2/--password=/}"
DB_HOST="${3/--host=/}"
DB_NAME="${4}"
BACKUP_DIR="${5}"
cd "$BACKUP_DIR"

if [ ! -d .git ]; then
	git init .
	echo '*.sql' > .gitignore
	git add .gitignore
	git commit -m init
fi

mysql_dumpsplit(){
	local table=""
	for table in "$PREFIX.table."*; do
		if [ $(stat -c %s "$table") -gt $((10*1024*1024)) ]; then
			split -a 4 -d -b 10M "$table" "$table.split."
			rm -f "$table";
		fi
	done
	return 0
}

PREFIX="${DB_NAME}.sql"
rm -f "$PREFIX.table."*

error=$( git pull origin master 2>&1 )\
	|| echo "$error" | grep -qm1 'does not appear to be a git repositor' \
	|| { echo  "$error"; exit 1; }

set -o pipefail
mysqldump --user=$USER --host="$DB_HOST" --password="$PASSWORD" \
	--opt -c --databases "$DB_NAME" \
	--skip-quick \
	--add-drop-table --add-drop-database --skip-extended-insert \
	--create-options --single-transaction \
	| csplit -n 4  -s -f"$PREFIX.table." - '/-- Table structure for table/' '{*}'
set +o pipefail
mysql_dumpsplit

git add .
error=$( git commit -am $(date +%Y-%m-%d_%H-%M) 2>&1 ) \
	|| echo "$error" | grep -qm1 'nothing to commit' \
	|| { echo  "$error"; exit 1; }
rm -f "$PREFIX.table."*
[ $(($RANDOM % 10 )) = 0 ] && git gc
error=$( git push origin master 2>&1 )\
	|| echo "$error" | grep -qm1 'does not appear to be a git repositor' \
	|| { echo  "$error"; exit 1; }

echo "$0 $@ [$$] SUCCESS" >&2
exit 0
